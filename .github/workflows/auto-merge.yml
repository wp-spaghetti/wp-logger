name: Auto-merge Dependabot PRs

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Get PR info
        id: pr
        uses: actions/github-script@v8
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            // Auto-merge patch and minor updates
            const title = pr.data.title.toLowerCase();
            const isMinorOrPatch = title.includes('patch') || 
                                  title.includes('minor') || 
                                  title.match(/bump .+ from [\d]+\.[\d]+\.[\d]+ to [\d]+\.[\d]+\.[\d]+$/);
                                  
            console.log('PR Title:', title);
            console.log('Should merge:', isMinorOrPatch);
                           
            return { shouldMerge: isMinorOrPatch };

      - name: Auto-approve Dependabot PR
        if: fromJSON(steps.pr.outputs.result).shouldMerge
        run: |
          gh pr review ${{ github.event.pull_request.number }} --approve --body "Auto-approving dependency update"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for checks (with timeout)
        if: fromJSON(steps.pr.outputs.result).shouldMerge
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'Tests (PHP 8.4)'
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 600
        continue-on-error: true

      - name: Check status and merge
        if: fromJSON(steps.pr.outputs.result).shouldMerge
        run: |
          # Get current status
          STATUS=$(gh pr status ${{ github.event.pull_request.number }} --json statusCheckRollup --jq '.statusCheckRollup[] | select(.name == "Tests (PHP 8.4)") | .conclusion')
          
          echo "Check status: $STATUS"
          
          if [ "$STATUS" = "SUCCESS" ] || [ "$STATUS" = "NEUTRAL" ]; then
            echo "‚úÖ Checks passed, merging PR"
            gh pr merge ${{ github.event.pull_request.number }} --squash --auto
          elif [ "$STATUS" = "FAILURE" ]; then
            echo "‚ùå Checks failed, not merging"
            exit 1
          else
            echo "‚è≥ Checks still running or unknown status, enabling auto-merge"
            gh pr merge ${{ github.event.pull_request.number }} --squash --auto
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on failure
        if: failure()
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ü§ñ Auto-merge failed. Please check the CI status and merge manually if appropriate.'
            });